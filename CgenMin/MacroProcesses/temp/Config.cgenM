##Macro1 
 ##LoopIncrement1 
 ##ToFile C:/Users/SyncthingServiceAcct/QR_Sync/cablecam\rosqt\include\cablecam_rqt\Config.hpp 
//############################################### 
//this is an autogenerated file using cgen's macro2 command. Dont modify this file here unless it is in user sections 
//###############################################

#pragma once


//####################################
//AE Settings
//####################################

#define AOPRIORITYLOWEST 5
#define AOPRIORITYMEDIUM 10
#define AOPRIORITYHIGHEST 29
#define NUMOFACTIVEOBJECTS 5
#define HIGHEST_NUM_OF_EVT_INSTANCES 1
#define RUNNING_TARGET defaultTestRos








//####################################
//AO defines
//####################################


#define Event0 QREventMSGNonQR
#define Event0Size 0


#define Event0 QREventMSGNonQR
#define Event0Size 0


#define Event0 QREventMSGNonQR
#define Event0Size 0





//####################################
//AE hal defines
//####################################







#define PROJECT_NAME cablecam


#include <string>

#include <cereal/archives/xml.hpp>
#include <cereal/archives/json.hpp>


##UserCode_c

namespace cablecam_rqt {
 

             class QR_Settings
             {
             public: 

               //put the variables you want to have as settings
               //for example
               //int size1;
               //std:string someothersetting
               std::string id;

               // This method lets cereal know which data members to serialize.
               template<class Archive>
               void serialize(Archive & archive)
               {

                 //you need to now set these variables in the archive. For example
                 //for example:
                 //archive(CEREAL_NVP(id),CEREAL_NVP(size1), CEREAL_NVP(someothersetting));
                 archive(CEREAL_NVP(id));

               }
             };



##UserCode_d

#ifdef ROS2_PROJECT
extern QR_Settings QRSettings;
#endif

}











 

